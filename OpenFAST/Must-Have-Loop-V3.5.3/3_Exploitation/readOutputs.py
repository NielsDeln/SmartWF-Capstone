from openfast_toolbox import FASTOutputFile
import matplotlib.pyplot as plt
import numpy as np

outputfile_location = "../../../Must_Should_Dataset/Outputs/w14.5000_s0.50_0_ms_out.out"
outputfile = FASTOutputFile(outputfile_location)
df = outputfile.toDataFrame()

#Rename columns and store units 
colNames = df.columns 
renameDict = {}
unitsDict = {}
for colName in colNames : 
    name,unit = colName.split("_")
    unit = unit.strip('[]')
    renameDict[colName] = name 
    unitsDict[name] = unit 
df = df.rename(columns=renameDict)
df['ResBndMnt'] = np.sqrt((df.RootMxb1 **2) + (df.RootMyb1 **2))
unitsDict['ResBndMnt'] = unitsDict['RootMxb1']

#Choose output to display 
columns = ['ResBndMnt','BldPitch1','Wind1VelX', "RootMxb1", "RootMyb1"]
columns = columns[::-1]


#Set plot parameters
linestyle = '-'
linewidth='1'
colors = ['blue','red','green','pink','orange']
figSize = (8,4)

#Plot the output 


for i,col in enumerate(columns): 
    fig,axs = plt.subplots(1,squeeze=False)
    axs = axs.flatten()
    ax = axs[0]
    ax.plot(df['Time'],df[col],color=colors[i],label=col)
    ax.set_xlabel(f"Time ({unitsDict['Time']})")
    ax.set_ylabel(f"{col} ({unitsDict[col]})")
    ax.legend()
    ax.set_xlim([0,600])
    ax.grid()
plt.tight_layout()
plt.show()
