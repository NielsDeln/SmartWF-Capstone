import openfast_toolbox
import matplotlib.pyplot as plt 
import os 
import numpy as np 


TSFile = "../../../Could_Dataset/Inputs/w9.00_s0.00_0_c_in.bts"
TS = openfast_toolbox.io.TurbSimFile(TSFile)
import matplotlib.animation as animation

fig, ax = plt.subplots()
plane = TS['u'][0,0,:,:]
im = ax.imshow(plane.T, cmap='RdYlBu_r', interpolation='spline16', extent=[-150, 150, 200, 0])
plt.colorbar(im, ax=ax, label='Wind Speed (m/s)')
ax.set_title('Wind Speed')
ax.set_xlabel('Y [m]')
ax.set_ylabel('Z [m]')
ax.invert_yaxis()

# Add a text box for displaying the simulation time
time_text = ax.text(0.02, 0.95, '', transform=ax.transAxes, color='white', fontsize=12, bbox=dict(facecolor='black', alpha=0.5))

def update(frame):
    plane = TS['u'][0,frame,:,:]
    im.set_array(plane.T)
    time_text.set_text(f"Time: {frame * TS['dt']:03.1f} s")
    return [im, time_text]

ani = animation.FuncAnimation(fig, update, frames=range(0, TS['u'].shape[1], 1), interval=100, blit=True)

# Save the animation
# ani.save('wind_speed_animation.mp4', writer='ffmpeg')

plt.show()
